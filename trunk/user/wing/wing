#!/bin/sh
#PATH=$(cd "${0%/*}"; pwd):$PATH

DNSMASQ_CONF="/etc/storage/dnsmasq/dnsmasq.conf"
GFWLIST_CONF="/etc/storage/dnsmasq/gfw_list.conf"
wing_home/="/tmp/trojan"

SS_LOCAL_PORT_LINK=$(nvram get ss_local_port)
ss_tunnel_local_port=$(nvram get ss-tunnel_local_port)

usage()
{
    echo "Usage: $0 <[start]|restart|stop|pause|resume|redir|status|update>"
    echo
    echo "Local Transparent mode (trojan only): $0 <TROJAN_HOST> <TROJAN_PORT> <PASSWORD>"
    echo "Local Socks mode (trojan+ipt2socks): $0 <TROJAN_HOST> <TROJAN_PORT> <PASSWORD> client"
    echo "Remote Socks mode (ipt2socks only): $0 <SOCKS_HOST> <SOCKS_PORT>"
    echo
    exit 0
}

update()
{
    /etc/storage/shadowsocks/update_gfwlist.sh force &
    sleep 2
    if [ ! -f "$wing_home/trojan" ]
    then
        [ ! -d "$wing_home" ] && mkdir -p "$wing_home"
        curl -k -s -o $wing_home/trojan --connect-timeout 10 --retry 3 https://cdn.jsdelivr.net/gh/896660689/OS/V2/trojan && \
        chmod 777 "$wing_home/trojan"
    fi
}

check()
{
    if [ ! -f $GFWLIST_CONF ]; then
        update
    fi
}

redir()
{
    iptables -t nat $1 OUTPUT -p tcp -m set --match-set gfwlist dst -j REDIRECT --to-port $SS_LOCAL_PORT_LINK
    iptables -t nat $1 PREROUTING -p tcp -m set --match-set gfwlist dst -j REDIRECT --to-port $SS_LOCAL_PORT_LINK
}

start()
{
    # prepage
    [ -z $3 ] && usage
    check

    # trojan
    if [ -z $4 ]; then
        RUN_MODE="Remote Socks"
        SOCKS_HOST=$2
        SOCKS_PORT=$3
    else
        TROJAN_HOST=$2
        TROJAN_PORT=$3
        TROJAN_PASS=$4
        if [ -z $5 ]; then RUN_TYPE=nat; else RUN_TYPE=$5; fi
        if [ "$RUN_TYPE" = "nat" ]; then
            RUN_MODE="Local Transparent"
            LOCAL_PORT=$SS_LOCAL_PORT_LINK
            SOCKS_HOST=
        else
            RUN_MODE="Local Socks"
            LOCAL_PORT=$SS_LOCAL_PORT_LINK
            SOCKS_HOST=127.0.0.1
            SOCKS_PORT=$LOCAL_PORT
        fi
        echo "{\"run_type\":\"$RUN_TYPE\",\"local_addr\":\"0.0.0.0\",\"local_port\":$LOCAL_PORT,\"remote_addr\":\"$TROJAN_HOST\",\"remote_port\":$TROJAN_PORT,\"password\":[\"$TROJAN_PASS\"],\"log_level\":$1,\"ssl\":{\"verify\":false}}" > $wing_home/trojan.conf
        if [ $1 -ge 5 ]; then
            $wing_home/trojan -c $wing_home/trojan.conf &
        else
            nohup $wing_home/trojan -c $wing_home/trojan.conf &> $wing_home/trojan.log &
        fi
    fi

    # ipt2socks
    if [ ! -z $SOCKS_HOST ]; then
        IPT2SOCKS_CMD="ipt2socks -s $SOCKS_HOST -p $SOCKS_PORT -b 0.0.0.0 -l $SS_LOCAL_PORT_LINK -j `cat /proc/cpuinfo|grep processor|wc -l` -T -4 -R"
        if [ $1 -ge 5 ]; then
            $IPT2SOCKS_CMD &
        elif [ $1 -ge 2 ]; then
            nohup $IPT2SOCKS_CMD &> $wing_home/ipt2socks.log &
        else
            nohup $IPT2SOCKS_CMD -v &> $wing_home/ipt2socks.log &
        fi
    fi

    # iptables
    ipset create gfwlist iphash
    ipset add gfwlist 8.8.8.8
    redir -A

    # dns2tcp
    # TODO: Modify dnsmasq to support HTTP/TCP DNS
    if [ $1 -ge 5 ]; then
        dns2tcp &
    elif [ $1 -ge 3 ]; then
        nohup dns2tcp &> $wing_home/dns2tcp.log &
    elif [ $1 -ge 2 ]; then
        nohup dns2tcp -q &> $wing_home/dns2tcp.log &
    else
        nohup dns2tcp -q -v &> $wing_home/dns2tcp.log &
    fi

    # dnsmasq
    # TODO: Modify dnsmasq to support domain-list-file based server config
    grep "conf-file=$GFWLIST_CONF" $DNSMASQ_CONF > /dev/null
    if [ $? != 0 ]; then
        killall dnsmasq
        echo "conf-file=$GFWLIST_CONF" >> $DNSMASQ_CONF
        dnsmasq
    fi
    echo "Wing is running in $RUN_MODE mode..."
}

stop()
{
    redir -D
    ipset destroy gfwlist

    [ -f $wing_home/dns-forwarder.log ] && rm $wing_home/dns-forwarder.log && killall dns-forwarder
    [ -f $wing_home/trojan ] && rm $wing_home/trojan
    [ -f $wing_home/dns2tcp.log ] && rm $wing_home/dns2tcp.log && killall dns2tcp
    [ -f $wing_home/ipt2socks.log ] && rm $wing_home/ipt2socks.log && killall ipt2socks
    [ -f $wing_home/trojan.log ] && rm $wing_home/trojan.* && killall trojan
}

status()
{
    if [ ${1::1} = t ]; then [ -f $wing_home/trojan.log ] && tail -f $wing_home/trojan.log; return; fi
    if [ ${1::4} = dns2 ]; then [ -f $wing_home/dns2tcp.log ] && tail -f $wing_home/dns2tcp.log; return; fi
    if [ ${1::4} = ipt2 ]; then [ -f $wing_home/ipt2socks.log ] && tail -f $wing_home/ipt2socks.log; return; fi

    ([ -z $1 ] || [ ${1::3} = ipt ]) && iptables -t nat -L PREROUTING && iptables -t nat -L OUTPUT
    ([ -z $1 ] || [ ${1::3} = ips ]) && echo && ipset -L gfwlist | more

    [ -z $1 ] && [ -f $wing_home/dns2tcp.log ] && echo && cat $wing_home/dns2tcp.log | more
    [ -z $1 ] && [ -f $wing_home/ipt2socks.log ] && echo && cat $wing_home/ipt2socks.log | more
    [ -z $1 ] && [ -f $wing_home/trojan.log ] && echo && cat $wing_home/trojan.log | more

    ([ -z $1 ] || [ ${1::1} = d ]) && tail -f /tmp/syslog.log
}

case "$1" in
    start)
        start 2 $2 $3 $4 $5
        ;;
    stop)
        stop
        check
        sed -i /conf-file=${GFWLIST_CONF//\//\\/}/d $DNSMASQ_CONF
        killall dnsmasq
        dnsmasq
        ;;
    restart)
        stop
        start 2 $2 $3 $4 $5
        ;;
    pause)
        redir -D
        ;;
    resume)
        ipset test gfwlist 8.8.8.8 && (redir -C || redir -A)
        ;;
    redir)
        redir $2
        ;;
    s|status)
        status $2
        ;;
    update)
        update
        ;;
    -v0|-v1|-v2|-v3|-v4|-v5)
        start ${1:2} $2 $3 $4 $5
        ;;
    -v)
        start 1 $2 $3 $4 $5
        ;;
    *)
        start 5 $1 $2 $3 $4
        ;;
esac

