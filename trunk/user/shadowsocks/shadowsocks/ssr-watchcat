#!/bin/sh

pidfile="/var/ssr-watchcat"
SS_JSON="/tmp/ss-redir.json"
CURRENT=$(ls -l $SS_JSON | awk -F "." '{print $4}')
SS_SCRIPT="/usr/bin/shadowsocks.sh"
Global_WEBSITE="http://www.google.com/"
CN_WEBSITE="www.baidu.com"

LOGFILE="/tmp/ss-watchcat.log"
max_log_bytes=3000

go_exit(){
    rm -f $pidfile
    exit
}

loger(){
    [ -f $LOGFILE ] && [ $(stat -c %s $LOGFILE) -gt $max_log_bytes ] && sed -i '1,10d' "$LOGFILE"
    time=$(date "+%H:%M:%S")
    echo "$time ss-watchdog $1" >> $LOGFILE
}

ge_Problem(){
	wget --spider --quiet --timeout=3 $Global_WEBSITE > /dev/null 2>&1
	return $?
}

cn_Problem(){
	wget --spider --quiet --timeout=3 $CN_WEBSITE > /dev/null 2>&1
	return $?
}

[ -f $pidfile ] && kill -9 "$(cat $pidfile)" || echo "$$" > $pidfile

if [ "$CURRENT" == "backup" ]; then
    loger "Ssr-备用服务器正在运行..."
    MAIN=$(cat $SS_JSON.main | awk -F '\"' '/\"server\"/ {print $4}')
    PM=$(ping -c 3 $MAIN | grep 'loss' | awk -F ',' '{ print $3 }' | awk -F "%" '{ print $1 }')
    if [ "$PM" -lt "50" ]; then
        loger "Main server up,$PM% packet loss, switch back."
        ln -sf $SS_JSON.main $SS_JSON
        CURRENT=$(ls -l $SS_JSON | awk -F "." '{print $4}')
        $SS_SCRIPT restart > /dev/null 2>&1
        sleep 3
    else
        loger "Main server down,$PM% packet loss."
    fi
fi

ge_Problem
if [ "$?" == "0" ]; then
    loger "Shadowsocks-运行正常,世界之窗已开启..."
    go_exit
else
    cn_Problem
    if [ "$?" == "0" ]; then
        loger "网络正常,Ssr-服务失败,重新启动-Shadowsocks..."
        $SS_SCRIPT dog_up > /dev/null 2>&1
        if [ "$CURRENT" == "main" ]; then
            sleep 5
            ge_Problem
            if [ "$?" == "0" ]; then
                loger "Shadowsocks-运行正常,世界之窗已开启..."
                go_exit
            else
                if [ "$(nvram get ss2_server)" = "127.0.0.1" ]
                then
                    loger "未设置备用服务器,稍后重新尝试主服务器…"
                else
                    loger "Ssr-主服务器不通,更换备用服务器运行..."
                    ln -sf $SS_JSON.backup $SS_JSON
                    $SS_SCRIPT dog_up > /dev/null 2>&1
                fi
            fi
        fi
    else
        loger "互联网络未接通-已断网......" && go_exit
    fi
fi
go_exit
